<article id="section-{{ section.id }}" class="page-section product {% unless product.available %}archive{% endunless %}" data-collection="{{ collection.handle }}" data-id="{{ product.id }}" data-settings-hv="{{ section.settings.hide_variants }}" data-availability="{{ product.available }}">

  {% assign variant = product.selected_or_first_available_variant %}

	<div class="product__text rte aural_{{ product.vendor | handleize }}">

    
		<header class="product__header">

			<h1 class="product__title">{{ product.title | escape }}</h1>

			<span class="product__price">

        
				{% if product.available %}
          <span class="product__price--original 
          {% unless product.available %}strikethrough{% endunless %}">{{ product.price | money }}</span>
        {% else %}
          <span class="soldout">Now part of a Private Collection</span>
        {% endif %}

			</span>

		</header>

		<section class="product__content">

			

      {%- capture vendor_handle -%}{{ product.vendor | handleize }}{%- endcapture -%}
      {%- capture full_desc -%}
        {% if product.metafields.global['auraldesc'].size >0 %}{{ product.metafields.global['auraldesc'] }}{% endif %}
        <dl class="metadata">
          {% if product.metafields.global['restorations'].size >0 %}<dt>Restoration</dt><dd class="aural_work">{{ product.metafields.global['restorations'] }}</dd>{% endif %}
          {% if product.metafields.global['specs'].size >0 %}<dt>Specs</dt><dd class="aural_specs">{{ product.metafields.global['specs'] }}</dd>{% endif %}
        </dl>
      {%- endcapture -%}

      <div class="product__description ">
        <div>
          {{ full_desc }}
          <br><br>
          AURAL AUDIO <br>
          // Buy / Sell / Trade / Repair / Restore //<br>
          As a small company of incredibly passionate vintage audiophiles, we celebrate and restore mid-century high-end vintage audio equipment, lovingly and reverentially returning it to the same exacting standards by which it was created; then sometimes adding our our custom touches.
          <br><br>
          ***Each piece we offer has been thoroughly tested and serviced by a licensed audio electronics tech to ensure that itâ€™s performing at, or above, factory specs.
          <br><br>
          ***Additional details available at auralfetish D0T com/products/{{product.handle}}
          <br><br>
          ***14-day return policy, no questions asked
          <br><br>
          PRICED FOR LOCAL PICKUP - LOCAL DELIVERY NEGO, STARTING AT $150
        </div>
      </div>

      

 		</section> 

 	</div>

  <div class="mobile-breadcrumb">{% render 'breadcrumb' %}</div>

	

  {% unless product.empty == empty %}
    <script type="application/json" id="ProductJson-{{ section.id }}" class="product-json">
      {{ product | json }}
    </script>
    <script type="application/json" id="ModelJson-{{ section.id }}" class="model-json">
      {{ product.media | where: 'media_type', 'model' | json }}
    </script>
  {% endunless %}

</article>


{% if section.settings.hide_variants %}

  <script type="text/javascript">

    // (c) Copyright 2016 Caroline Schnapp. All Rights Reserved. Contact: mllegeorgesand@gmail.com
    // See https://docs.shopify.com/themes/customization/navigation/link-product-options-in-menus

    Shopify.arrayIncludes = function(e, t) {
      for (var n = 0; n < e.length; n++)
          if (e[n] == t) return !0;
      return !1
    }, Shopify.uniq = function(e) {
        for (var t = [], n = 0; n < e.length; n++) Shopify.arrayIncludes(t, e[n]) || t.push(e[n]);
        return t
    }

    Shopify.updateOptionsInSelector = function(selectorIndex, $product) {

      var productOptionsMap = $product.data('om');

      switch (selectorIndex) {
        case 0:
          var key = 'root';
          var selector = $product.find('.product__variant-holder:eq(0) .product__variant');
          break;
        case 1:
          var key = $product.find('.product__variant-holder:eq(0) .product__variant').val();
          var selector = $product.find('.product__variant-holder:eq(1) .product__variant');
          break;
        case 2:
          var key = $product.find('.product__variant-holder:eq(0) .product__variant').val();  
          key += ' / ' + $product.find('.product__variant-holder:eq(1) .product__variant').val();
          var selector = $product.find('.product__variant-holder:eq(2) .product__variant');
      }
      
      var initialValue = selector.val();
      selector.empty();    
      var availableOptions = productOptionsMap[key];

      $('.product__variant-holder').eq(selectorIndex).find('.regular-select-item').each(function(){
        $(this).removeClass('disabled');
        if ( $.inArray(decodeURIComponent($(this).data('value').toString()), availableOptions) < 0 ) {
          $(this).addClass('disabled');
          $(this).removeClass('selected');
        }
      });

      selector.find('option').each(function(){
        $(this).removeAttr('disabled', 'disabled');
        if ( ! $.inArray(decodeURIComponent($(this).val()), availableOptions) ) {
          $(this).attr('disabled', 'disabled')
        }
      })

      if ( availableOptions ) {
        for (var i=0; i<availableOptions.length; i++) {
          var option = availableOptions[i];
          var newOption = jQuery('<option></option>').val(option).html(option);
          selector.append(newOption);
        }
      }

      if (jQuery.inArray(initialValue, availableOptions) !== -1) {
        selector.val(initialValue);
      }
      selector.trigger('change');  
      
    };

    Shopify.linkOptionSelectors = function(product, $product) {
      var productOptionsMap = $product.data('om');
      // Building our mapping object.
      for (var i=0; i<product.variants.length; i++) {
        var variant = product.variants[i];
        if (variant.available) {
          // Gathering values for the 1st drop-down.
          productOptionsMap['root'] = productOptionsMap['root'] || [];
          productOptionsMap['root'].push(variant.option1);
          productOptionsMap['root'] = Shopify.uniq(productOptionsMap['root']);
          // Gathering values for the 2nd drop-down.
          if (product.options.length > 1) {
            var key = variant.option1;
            productOptionsMap[key] = productOptionsMap[key] || [];
            productOptionsMap[key].push(variant.option2);
            productOptionsMap[key] = Shopify.uniq(productOptionsMap[key]);
          }
          // Gathering values for the 3rd drop-down.
          if (product.options.length === 3) {
            var key = variant.option1 + ' / ' + variant.option2;
            productOptionsMap[key] = productOptionsMap[key] || [];
            productOptionsMap[key].push(variant.option3);
            productOptionsMap[key] = Shopify.uniq(productOptionsMap[key]);
          }
        }
      }
      // Update options right away.
      Shopify.updateOptionsInSelector(0, $product);
      if (product.options.length > 1) Shopify.updateOptionsInSelector(1, $product);
      if (product.options.length === 3) Shopify.updateOptionsInSelector(2, $product);
      // When there is an update in the first dropdown.
      $product.find(".product__variant-holder:eq(0) .product__variant").change(function() {
        Shopify.updateOptionsInSelector(1, $product);
        if (product.options.length === 3) Shopify.updateOptionsInSelector(2, $product);
        return true;
      });
      // When there is an update in the second dropdown.
      $product.find(".product__variant-holder:eq(1) .product__variant").change(function() {
        if (product.options.length === 3) Shopify.updateOptionsInSelector(2, $product);
        return true;
      });  
    };

</script>

{% endif %}

{% schema %}
	{
    "name": "Product page",
    "class": "mount-product-page mount-toggles",
    "max_blocks": 4,
    "blocks": [
      {
        "type": "text",
        "name": "Toggle",
        "settings": [
          {
            "type": "text",
            "id": "title",
            "label": "Title",
            "default": "Title"
          },
          {
            "type": "richtext",
            "id": "body",
            "label": "Text",
            "default": "<p>Add extra product information, such as size guides or technical data.</p>"
          },
          {
            "type": "image_picker",
            "id": "image",
            "label": "Image"
          }
        ]
      }
    ],
    "settings": [
			{
        "type": "header",
        "content": "Content"
      },
      {
        "type": "checkbox",
        "id": "show_vendor",
        "label": "Show vendor",
        "default": true
      },
      {
        "type": "select",
        "id": "product_description_truncated",
        "label": "Truncate description",
        "options": [
          {
            "value": "truncated--disabled",
            "label": "Don't truncate"
          },
          {
            "value": "truncated truncated--small",
            "label": "Show small excerpt",
            "group": "Truncate"
          },
          {
            "value": "truncated truncated--medium",
            "label": "Show medium excerpt",
            "group": "Truncate"
          },
          {
            "value": "truncated truncated--large",
            "label": "Show large excerpt",
            "group": "Truncate"
          }
        ],
        "default": "truncated truncated--small"
      },
      {
        "type": "checkbox",
        "id": "show_quantity_selector",
        "label": "Show quantity selector",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "show_quantities",
        "label": "Show variant quantities",
        "default": false
      },
      {
        "type": "checkbox",
        "id": "show_variant_labels",
        "label": "Show variant labels",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "hide_variants",
        "label": "Hide out of stock variants",
        "default": false
      },
      {
        "type": "checkbox",
        "id": "enable_payment_button",
        "label": "Show dynamic checkout button",
        "info": "Each customer will see their preferred payment method from those available on your store, such as PayPal or Apple Pay. [Learn more](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "show_share",
        "label": "Show share link",
        "default": true
      },
      {
        "type": "header",
        "content": "Media",
        "info": "Learn more about [media type](https://help.shopify.com/en/manual/products/product-media)"
      },
      {
        "type": "select",
        "id": "gallery_style",
        "label": "Gallery style",
        "options": [
          {
            "value": "scroll",
            "label": "Scroll"
          },
          {
            "value": "slider",
            "label": "Slider"
          }
        ],
        "default": "scroll",
        "info": "Defaults to slider for mobile devices"
      },
      {
        "type": "radio",
        "id": "gallery_pagination",
        "label": "Pagination",
        "options": [
          {
            "value": "dots",
            "label": "Dots"
          },
          {
            "value": "thumbnails",
            "label": "Thumbnails"
          }
        ],
        "default": "dots"
      },
      {
        "type": "checkbox",
        "id": "gallery_gutter",
        "label": "Enable spacing between media",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "enable_zoom",
        "label": "Enable image zoom",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "enable_video_looping",
        "label": "Enable video looping",
        "default": false
      },
      {
        "type": "header",
        "content": "Product reviews",
        "info": "You need to install [Shopify's free Product Reviews app](https://apps.shopify.com/product-reviews) before enabling this option."
      },
      {
        "type": "checkbox",
        "id": "show_reviews",
        "label": "Show reviews",
        "default": false
      },
      {
        "type": "checkbox",
        "id": "show_reviews_badge",
        "label": "Show reviews badge",
        "default": false
      }
    ]
  }
{% endschema %}